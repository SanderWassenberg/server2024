/* My defaults */
:root {
	font-family: sans-serif;
	font-size: 17px;
}
html { height: 100%; }
body { min-height: 100%; }

section {
	line-height: 1.5em;
}

h1,h2,h3,h4,h5,h6 {
	margin-bottom: 10px;
}

dialog::backdrop {
	background: #111111AA;
}

button, input[type="submit"] {
	border: 5px solid black;
	background: white;
	padding: 10px;
	font-size: inherit;
}
:is(button, input[type="submit"]):hover:not([disabled]) {
	cursor: pointer;
	background: lemonchiffon;
}

:is(button, input[type="submit"])[disabled] {
	background: #838288;
	border-color: #55555f;
	color: #6d6d6d;
}

input[type="text"], input[type="email"], input[type="password"], textarea {
	border: 5px solid black;
	padding: 5px;
	font-size: inherit;
}
:is(input[type="text"], input[type="email"], input[type="password"], textarea)[disabled] {
	background: #8e8d91;
	color: #6d6d6d;
	border-color: #55555f;
}



.icon-button {
	font-size: 25px;
	color: black;
}

:root {
	--default-border-width: 5px;
	--make-it-responsive-width: 800px; /* tied to max-width media query */
	--default-border-color: black;
}
.make-it-responsive {
	max-width: var(--make-it-responsive-width);
	box-sizing: border-box; /* so that padding doesn't affect width */
	width: -moz-available;
    width: -webkit-fill-available;
}
.make-it-responsive-bordered {
	max-width: var(--make-it-responsive-width);
	box-sizing: border-box; /* so that padding doesn't affect width */
	width: -moz-available;
    width: -webkit-fill-available;

	border-left: var(--default-border-width) solid var(--default-border-color);
	border-right: var(--default-border-width) solid var(--default-border-color);
}
@media (max-width: 800px) {
	.make-it-responsive-bordered {
		border-left: none;
		border-right: none;
	}
}

.flex-row {
	display: flex;
	flex-direction: row;
}
.flex-row-center {
	display: flex;
	flex-direction: row;
	justify-content: center;
}
.flex-col {
	display: flex;
	flex-direction: column;
}
.flex-col-center {
	display: flex;
	flex-direction: column;
	justify-content: center;
}
.p20 {
	padding: 20px;
}
.p5 {
	padding: 5px;
}
.g20 {
	gap: 20px;
}

.spinner {
	box-sizing: border-box;
	aspect-ratio: 1;
	border-radius: 50%;
	border-width: 5px;
	border-style: solid;
	border-color: black #0000 #0000;
	animation-name: spin;
	animation-iteration-count: infinite;
	animation-timing-function: linear;

	animation-duration: 1000ms;
}
.spinner::before {
	content: '';
	display: block;

	box-sizing: border-box;
	aspect-ratio: 1;
	border-radius: 50%;
	border-width: 5px;
	border-style: solid;
	border-color: black #0000 #0000;
	animation-name: spin;
	animation-iteration-count: infinite;
	animation-timing-function: linear;

	animation-duration: 400ms;
	animation-direction: reverse;
}

.search-table {
	border-collapse: collapse;

	table-layout: fixed; /* will make all cols take up equal space, but requires explicit width on the table. set width of the first row's cells to change the col width */
	width: 100%;
}
.search-table th {
	border-bottom: var(--default-border-width) solid var(--default-border-color);
}
.search-table td:nth-child(2) {
	border-left: 5px solid;
	padding-left: 10px;
}
.search-table td {
	/* TEMP  border: 1px solid red; */
	text-overflow: ellipsis;
	overflow: hidden;
}
.search-table tr:nth-child(2n) {
	background: #EEE;
}
.search-table :is(td, th):first-child {
	padding-left: 20px;
}
.search-table :is(td, th):last-child {
	padding-right: 20px;
}


.search-table :is(.ban, .chat) {
	font-size: 30px;
	text-align: center;
}
.search-table th:is(.ban, .chat) {
	width: 35px; /* min-content doesnt work in chrome */
	visibility: hidden; /* we use the content to determine the width, but we don't actually want to render it here */
}

/* set html data-role as admin to reveal this column */
:root:not([data-role=admin]) .search-table .ban {
	display: none;
}
.search-table .ban:hover {
	background: red;
	color: white;
}
.search-table .ban {
	color: red;
	padding-right: 5px;
	padding-left: 5px;
	cursor: pointer;
}


.msg {
	border: var(--default-border-width) solid var(--default-border-color);
	padding: 10px 15px;
	max-width: 500px;
	word-wrap: break-word;

	background: white;
	border-radius: 20px 20px 20px 0px;
	align-self: start;
}
.msg.self {
	background: lightgreen;
	border-radius: 20px 20px 0px 20px;
	align-self: end;
}



.wiggle {
	animation: wiggle .15s 3 ease-in-out;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to   { transform: rotate(1turn); }
}
@keyframes wiggle {
	0%   { transform: translateY(0); }
	25%  { transform: translateY(-5px); }
	75%  { transform: translateY(5px); }
	100% { transform: translateY(0); }
}
